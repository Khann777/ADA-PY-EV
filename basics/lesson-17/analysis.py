
#! ====================================Типы данных python======================================
# 1) Изменяемые - dict, set, list
# 2) Неизменяемые - tuple, int, float, string, bool, None, frozenset

#! ==========================================Numbers===========================================
# Числа - Неизменяемый, неитерируемый тип данных для хранения чисел и проведения над ними арифметических действий

int # Целые числа
float # Вещественные, дробные, десятичные, с плавающей точкой
# decimal # Десятичные, но более точные

#! ===========================================String===========================================
# Строки - неизменяемый, итерируемый, индексируемый тип данных предназначенный для хранения строк, последовательностей символов заключенных в кавычки

str1 = 'hello'
str2 = "hello"
str3 = """hello"""
str4 = '''hello'''
# error = 'hello" # SyntaxError: EOL while scanning string literal

#! ===========================================Индексы==========================================
# Индекмы - нумерация каждого элемента, которая начинается с 0
string = 'hello world'
# print(string[-1]) 
# print(string[5])

#! ===========================================Срезы============================================
# Срезы - часть последовательностей (в случае со строками, срез дает нам подстроку) (начало:конец:шаг)
string = 'some string'
print(string[0:4])
print(string[:4])

#! ===========================================List=============================================
# Список - изменяемый, итерируемый, индексируемый тип данных для хранения последовательности элементов (Может хранить любые типы данных)

list1 = [1, 'str', None, False, True, [1], {1: 1}, 1.1]
list1[-1]

#! ===========================================Tuple============================================
# Tuple - неизменяемый, индексируемый, итерируемый тип данных, литералы - запятые. По сути просто неизменяемый список
num = (1) # int
tuple1 = (1,) # tuple
tuple2 = 1,2,3,4,5,6 # tuple (1, 2, 3, 4, 5, 6)

#! =============================================Set============================================
# Set - изменяемый, неиндексируемый, итерируемый тип данных для хранения уникальных элементов. Литералы - {}
set1 = {} # dict
set1 = set() # set
set2 = {1,1,1,2,2,2,3,3,3,4,5} # {1, 2, 3, 4, 5}
set3 = {1, 0, True, False} # {1, 0}
set4 = {True, 0, False, 1} # {True, 0}
# remove() - удаляет элемент

#! =========================================Frozenset==========================================
# frozenset - неизменяемый set, все методы которые были у set во frozenset отсутствуют 
f_set = frozenset([1, 2, 3, 4, 1, 1]) # {1, 2, 3, 4}

#! ===========================================Dict=============================================
# Dict - изменяемый, итерируемый, неидексируемый тип данных для хранения пар (ключ: значение)
# ключи - должны быть только неизменяемые типы данных
# если ключом будет tuple, то в нем тоже должны быть только неизменяемые типы данных
# если ключ повторяется - значение перезаписывается на последнее
dict1 = {'a': 1, 'b': 2, 'a': 3} # {'a': 3, 'b': 2}

#! ===========================================Bool=============================================
# Bool - логический тип данных , с двумя значениями (True / False) == (1 / 0)

#! =========================================NoneType===========================================
# None - тип данных, для обозначения отсутствия значения

#! ========================================Conditions==========================================
# Условия - конструкция которая при разных условиях позволяет выполнять или не выполнять, какой-то кусок кода, который находится в теле условия

# if cond1:
#     ...
# elif cond2:
#     ...
# else:
#     ...

#! ====================================Тернарные операторы=====================================
# Тернарные операторы - условие if else в одну строчку
# результат if условие else результат2

#! ===========================================Циклы============================================
# Циклы - блок кода, который будет выполняться несколько раз
# Итерация - 1 шаг цикла
# Итератор - for
# Итерируемый объект - объект по которому мы проходимся циклом

# continue - пропускает 1 итерацию
# break - полностью останавливает работу цикла

#! ============================================For=============================================
# For - цикл, который проходится по элементам итерируемого объекта (str, list, dict, set, tuple, range())
# В цикле for мы выполняем какие-то операции над элементами объекта. Останавливается когда доходит до последнего элемента в последовательности 

list1 = [1, 2, 3, 4, 5]
# for i in list1:
    # print(i)

#! ===========================================While============================================
# While - цикл, который работает до тех пор пока условие которое ему было задано верное (True), может быть бесконечным

# num = 10
# while num:
#     print(num)
dict1 = {'a':1, 'b':2, 'c':3, 'd':4}
print(dict1.items())